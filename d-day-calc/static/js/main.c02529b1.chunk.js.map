{"version":3,"sources":["components/common/Header.jsx","components/common/Footer.jsx","components/main/MainWrapper.jsx","components/main/DateInput.jsx","components/main/DateResult.jsx","components/main/Result.jsx","App.jsx","styles/theme.js","styles/global-style.js","index.jsx"],"names":["Header","Title","styled","h1","theme","fontSizes","titleSize","Footer","h2","xxl","MainWrapper","newDate","Date","useState","getFullYear","year","setYear","getMonth","month","setMonth","getDate","date","setDate","Wrapper","main","colors","gray3","DateInput","changeDate","e","setState","target","value","today","ButtonToday","onClick","InputWrapper","Input","type","onChange","section","button","orange","white","input","DateResult","map","sign","idx","Result","dayCount","setDayCount","resultDate","setResultDate","handleChange","inputValue","returnResult","useCallback","setFullYear","Number","result","useEffect","ResultDate","div","App","calcRem","size","deviceSizes","mobileS","mobileM","mobileL","tablet","tabletL","small","base","lg","xl","gray1","gray2","black","borderGray","device","GlobalStyle","createGlobalStyle","reset","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c02529b1.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Header = () => {\n  return <Title>🧡디데이계산기🧡</Title>;\n};\n\nexport default Header;\n\nconst Title = styled.h1`\n  font-size: ${({ theme }) => theme.fontSizes.titleSize};\n  font-weight: bold;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Footer = () => {\n  return <Title>SOPT WEB 29th soryeongk</Title>;\n};\n\nexport default Footer;\n\nconst Title = styled.h2`\n  font-size: ${({ theme }) => theme.fontSizes.xxl};\n  font-weight: bold;\n`;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { DateResult, DateInput } from '..';\n\nconst MainWrapper = () => {\n  const newDate = new Date();\n  const [year, setYear] = useState(newDate.getFullYear());\n  const [month, setMonth] = useState(newDate.getMonth() + 1);\n  const [date, setDate] = useState(newDate.getDate());\n\n  return (\n    <Wrapper>\n      <DateInput\n        year={year}\n        month={month}\n        date={date}\n        setYear={setYear}\n        setMonth={setMonth}\n        setDate={setDate}\n      />\n      <DateResult year={year} month={month} date={date} />\n    </Wrapper>\n  );\n};\n\nexport default MainWrapper;\n\nconst Wrapper = styled.main`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 70vw;\n  padding: 5rem 0;\n  border-top: 0.2rem solid ${({ theme }) => theme.colors.gray3};\n  border-bottom: 0.2rem solid ${({ theme }) => theme.colors.gray3};\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst DateInput = ({ year, month, date, setYear, setMonth, setDate }) => {\n  const changeDate = (e, setState) => {\n    if (e.target.value < 0) return;\n    setState(e.target.value);\n  };\n  const today = new Date();\n\n  const returnToday = () => {\n    setYear(today.getFullYear());\n    setMonth(today.getMonth() + 1);\n    setDate(today.getDate());\n  };\n\n  return (\n    <Wrapper>\n      <ButtonToday onClick={returnToday}>\n        오늘({today.getFullYear()}.{today.getMonth() + 1}.{today.getDate()})로 바꾸기\n      </ButtonToday>\n      <InputWrapper>\n        <Input type=\"number\" value={year} onChange={e => changeDate(e, setYear)} />년\n        <Input type=\"number\" value={month} onChange={e => changeDate(e, setMonth)} />월\n        <Input type=\"number\" value={date} onChange={e => changeDate(e, setDate)} />\n        일을 기준으로\n      </InputWrapper>\n    </Wrapper>\n  );\n};\n\nexport default DateInput;\n\nconst Wrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  padding: 1rem;\n  width: 100%;\n  height: 10rem;\n`;\n\nconst InputWrapper = styled.section`\n  display: flex;\n  align-items: center;\n`;\n\nconst ButtonToday = styled.button`\n  border: 0.1rem solid ${({ theme }) => theme.colors.orange};\n  padding: 0.3rem 0.5rem;\n  color: ${({ theme }) => theme.colors.orange};\n  position: relative;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    opacity: 0.1;\n    background-color: ${({ theme }) => theme.colors.orange};\n  }\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.orange};\n    color: ${({ theme }) => theme.colors.white};\n  }\n`;\n\nconst Input = styled.input`\n  width: 3.5rem;\n\n  & + input {\n    width: 2.5rem;\n    margin-left: 0.5rem;\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Result } from '..';\n\nconst DateResult = ({ year, month, date }) => {\n  return (\n    <Wrapper>\n      {['+', '-'].map((sign, idx) => (\n        <Result key={`dateResult-${idx}`} sign={sign} year={year} month={month} date={date} />\n      ))}\n    </Wrapper>\n  );\n};\n\nexport default DateResult;\n\nconst Wrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 1rem;\n  width: 100%;\n`;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\n\nconst Result = ({ sign, year, month, date }) => {\n  const [dayCount, setDayCount] = useState(0);\n  const [resultDate, setResultDate] = useState(\n    `${year}년 ${month}월 ${date}일`\n  );\n\n  const handleChange = (e) => {\n    const inputValue = e.target.value;\n    if (inputValue < 0) return;\n    setDayCount(inputValue);\n    returnResult(inputValue);\n  };\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const returnResult = useCallback((value) => {\n    const newDate = new Date();\n    newDate.setFullYear(Number(year));\n    newDate.setMonth(Number(month) - 1);\n    if (sign === \"+\") newDate.setDate(Number(date) + Number(value));\n    else newDate.setDate(Number(date) - Number(value));\n\n    const result = `${newDate.getFullYear()}년 ${\n      newDate.getMonth() + 1\n    }월 ${newDate.getDate()}일`;\n\n    setResultDate(result);\n  });\n\n  useEffect(() => {\n    returnResult(dayCount);\n  }, [year, month, date, dayCount, returnResult]);\n\n  return (\n    <Wrapper>\n      {sign === \"+\" ? (\n        <InputWrapper>\n          <Input type=\"number\" value={dayCount} onChange={handleChange} />\n          일째 되는 날은?\n        </InputWrapper>\n      ) : (\n        <InputWrapper>\n          D-\n          <Input value={dayCount} type=\"number\" onChange={handleChange} />\n          는?\n        </InputWrapper>\n      )}\n      <ResultDate>{resultDate}</ResultDate>\n    </Wrapper>\n  );\n};\n\nexport default Result;\n\nconst Wrapper = styled.section`\n  display: flex;\n  width: 100%;\n\n  & + section {\n    margin-top: 1.5rem;\n  }\n`;\n\nconst InputWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Input = styled.input`\n  width: 5rem;\n`;\n\nconst ResultDate = styled.h2`\n  margin-left: auto;\n  font-weight: bold;\n`;\n","import { Header, MainWrapper, Footer } from \"./components\";\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <MainWrapper />\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","const calcRem = size => `${size / 16}rem`;\nconst fontSizes = {\n  small: calcRem(14),\n  base: calcRem(16),\n  lg: calcRem(18),\n  xl: calcRem(20),\n  xxl: calcRem(22),\n  titleSize: calcRem(50),\n};\n\nconst colors = {\n  gray1: '#FAFAFA',\n  gray2: '#F3F3F3',\n  gray3: '#D4D4D4',\n  black: '#3E3E3E',\n  white: '#FFFFFF',\n  borderGray: '#929292',\n  orange: '#F7630C',\n};\n\nconst deviceSizes = {\n  mobileS: '320px',\n  mobileM: '375px',\n  mobileL: '450px',\n  tablet: '768px',\n  tabletL: '1024px',\n};\n\nconst device = {\n  mobileS: `only screen and (max-width: ${deviceSizes.mobileS})`,\n  mobileM: `only screen and (max-width: ${deviceSizes.mobileM})`,\n  mobileL: `only screen and (max-width: ${deviceSizes.mobileL})`,\n  tablet: `only screen and (max-width: ${deviceSizes.tablet})`,\n  tabletL: `only screen and (max-width: ${deviceSizes.tabletL})`,\n};\n\nconst theme = {\n  fontSizes,\n  colors,\n  deviceSizes,\n  device,\n};\n\nexport default theme;\n","import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nexport const GlobalStyle = createGlobalStyle`\n  ${reset}\n\n  * {\n    box-sizing: border-box;\n  }\n\n  @font-face {\n    font-family: \"NotoSansKR\";\n    font-weight: normal;\n    font-style: normal;\n    src: url(\"/fonts/NotoSansKR-Regular.otf\") format(\"opentype\");\n  }\n\n  @font-face {\n    font-family: \"Helvetica\";\n    font-weight: normal;\n    font-style: normal;\n    src: url(\"/fonts/Helvetica.ttf\") format(\"truetype\");\n  }\n\n  @font-face {\n    font-family: \"HelveticaBlack\";\n    font-weight: normal;\n    font-style: normal;\n    src: url(\"/fonts/HelveticaBlack.ttf\") format(\"truetype\");\n  }\n\n  html {\n    color: #3E3E3E;\n    font-family: NotoSansKR;\n  }\n\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n\n  input, button {\n    outline: none; \n    border: none;\n    background-color: transparent;                                                                                                                                                                        \n  }\n\n  input {\n    border: 0.1rem solid ${({ theme }) => theme.colors.gray3};\n  }\n\n  body {\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n  }\n\n  #root {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-around;\n    width: 100vw;\n    height: 80vh;\n  }\n`;\n\nexport default GlobalStyle;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { ThemeProvider } from \"styled-components\";\nimport theme from \"./styles/theme\";\nimport { GlobalStyle } from \"./styles/global-style\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}