{"version":3,"sources":["components/common/Header.jsx","components/common/Footer.jsx","components/main/MainWrapper.jsx","components/main/DateInput.jsx","components/main/DateResult.jsx","components/main/Result.jsx","App.jsx","styles/theme.js","styles/global-style.js","index.jsx"],"names":["Header","Title","styled","h1","theme","fontSizes","titleSize","Footer","h2","xxl","MainWrapper","newDate","Date","useState","getFullYear","year","setYear","getMonth","month","setMonth","getDate","date","setDate","Wrapper","main","colors","gray3","DateInput","changeDate","e","setState","target","value","today","ButtonToday","onClick","InputWrapper","Input","type","onChange","section","button","orange","white","input","DateResult","map","sign","idx","Result","dayCount","setDayCount","resultDate","setResultDate","handleChange","inputValue","returnResult","useCallback","setFullYear","Number","result","useEffect","ResultDate","div","App","calcRem","size","deviceSizes","mobileS","mobileM","mobileL","tablet","tabletL","small","base","lg","xl","gray1","gray2","black","borderGray","device","GlobalStyle","createGlobalStyle","reset","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3a32adf.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Header = () => {\r\n  return <Title>🧡디데이계산기🧡</Title>;\r\n};\r\n\r\nexport default Header;\r\n\r\nconst Title = styled.h1`\r\n  font-size: ${({ theme }) => theme.fontSizes.titleSize};\r\n  font-weight: bold;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Footer = () => {\r\n  return <Title>SOPT WEB 29th soryeongk</Title>;\r\n};\r\n\r\nexport default Footer;\r\n\r\nconst Title = styled.h2`\r\n  font-size: ${({ theme }) => theme.fontSizes.xxl};\r\n  font-weight: bold;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { DateResult, DateInput } from '..';\r\n\r\nconst MainWrapper = () => {\r\n  const newDate = new Date();\r\n  const [year, setYear] = useState(newDate.getFullYear());\r\n  const [month, setMonth] = useState(newDate.getMonth() + 1);\r\n  const [date, setDate] = useState(newDate.getDate());\r\n\r\n  return (\r\n    <Wrapper>\r\n      <DateInput\r\n        year={year}\r\n        month={month}\r\n        date={date}\r\n        setYear={setYear}\r\n        setMonth={setMonth}\r\n        setDate={setDate}\r\n      />\r\n      <DateResult year={year} month={month} date={date} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default MainWrapper;\r\n\r\nconst Wrapper = styled.main`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 70vw;\r\n  padding: 5rem 0;\r\n  border-top: 0.2rem solid ${({ theme }) => theme.colors.gray3};\r\n  border-bottom: 0.2rem solid ${({ theme }) => theme.colors.gray3};\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst DateInput = ({ year, month, date, setYear, setMonth, setDate }) => {\r\n  const changeDate = (e, setState) => {\r\n    if (e.target.value < 0) return;\r\n    setState(e.target.value);\r\n  };\r\n  const today = new Date();\r\n\r\n  const returnToday = () => {\r\n    setYear(today.getFullYear());\r\n    setMonth(today.getMonth() + 1);\r\n    setDate(today.getDate());\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ButtonToday onClick={returnToday}>\r\n        오늘({today.getFullYear()}.{today.getMonth() + 1}.{today.getDate()})로 바꾸기\r\n      </ButtonToday>\r\n      <InputWrapper>\r\n        <Input type=\"number\" value={year} onChange={e => changeDate(e, setYear)} />년\r\n        <Input type=\"number\" value={month} onChange={e => changeDate(e, setMonth)} />월\r\n        <Input type=\"number\" value={date} onChange={e => changeDate(e, setDate)} />\r\n        일을 기준으로\r\n      </InputWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default DateInput;\r\n\r\nconst Wrapper = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  padding: 1rem;\r\n  width: 100%;\r\n  height: 10rem;\r\n`;\r\n\r\nconst InputWrapper = styled.section`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst ButtonToday = styled.button`\r\n  border: 0.1rem solid ${({ theme }) => theme.colors.orange};\r\n  padding: 0.3rem 0.5rem;\r\n  color: ${({ theme }) => theme.colors.orange};\r\n  position: relative;\r\n\r\n  &:before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    opacity: 0.1;\r\n    background-color: ${({ theme }) => theme.colors.orange};\r\n  }\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.colors.orange};\r\n    color: ${({ theme }) => theme.colors.white};\r\n  }\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 3.5rem;\r\n\r\n  & + input {\r\n    width: 2.5rem;\r\n    margin-left: 0.5rem;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Result } from '..';\r\n\r\nconst DateResult = ({ year, month, date }) => {\r\n  return (\r\n    <Wrapper>\r\n      {['+', '-'].map((sign, idx) => (\r\n        <Result key={`dateResult-${idx}`} sign={sign} year={year} month={month} date={date} />\r\n      ))}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default DateResult;\r\n\r\nconst Wrapper = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  padding: 1rem;\r\n  width: 100%;\r\n`;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Result = ({ sign, year, month, date }) => {\r\n  const [dayCount, setDayCount] = useState(0);\r\n  const [resultDate, setResultDate] = useState(\r\n    `${year}년 ${month}월 ${date}일`\r\n  );\r\n\r\n  const handleChange = (e) => {\r\n    const inputValue = e.target.value;\r\n    if (inputValue < 0) return;\r\n    setDayCount(inputValue);\r\n    returnResult(inputValue);\r\n  };\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const returnResult = useCallback((value) => {\r\n    const newDate = new Date();\r\n    newDate.setFullYear(Number(year));\r\n    newDate.setMonth(Number(month) - 1);\r\n    if (sign === \"+\") newDate.setDate(Number(date) + Number(value));\r\n    else newDate.setDate(Number(date) - Number(value));\r\n\r\n    const result = `${newDate.getFullYear()}년 ${\r\n      newDate.getMonth() + 1\r\n    }월 ${newDate.getDate()}일`;\r\n\r\n    setResultDate(result);\r\n  });\r\n\r\n  useEffect(() => {\r\n    returnResult(dayCount);\r\n  }, [year, month, date, dayCount, returnResult]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      {sign === \"+\" ? (\r\n        <InputWrapper>\r\n          <Input type=\"number\" value={dayCount} onChange={handleChange} />\r\n          일째 되는 날은?\r\n        </InputWrapper>\r\n      ) : (\r\n        <InputWrapper>\r\n          D-\r\n          <Input value={dayCount} type=\"number\" onChange={handleChange} />\r\n          는?\r\n        </InputWrapper>\r\n      )}\r\n      <ResultDate>{resultDate}</ResultDate>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n\r\nconst Wrapper = styled.section`\r\n  display: flex;\r\n  width: 100%;\r\n\r\n  & + section {\r\n    margin-top: 1.5rem;\r\n  }\r\n`;\r\n\r\nconst InputWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 5rem;\r\n`;\r\n\r\nconst ResultDate = styled.h2`\r\n  margin-left: auto;\r\n  font-weight: bold;\r\n`;\r\n","import { Header, MainWrapper, Footer } from \"./components\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <MainWrapper />\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const calcRem = size => `${size / 16}rem`;\r\nconst fontSizes = {\r\n  small: calcRem(14),\r\n  base: calcRem(16),\r\n  lg: calcRem(18),\r\n  xl: calcRem(20),\r\n  xxl: calcRem(22),\r\n  titleSize: calcRem(50),\r\n};\r\n\r\nconst colors = {\r\n  gray1: '#FAFAFA',\r\n  gray2: '#F3F3F3',\r\n  gray3: '#D4D4D4',\r\n  black: '#3E3E3E',\r\n  white: '#FFFFFF',\r\n  borderGray: '#929292',\r\n  orange: '#F7630C',\r\n};\r\n\r\nconst deviceSizes = {\r\n  mobileS: '320px',\r\n  mobileM: '375px',\r\n  mobileL: '450px',\r\n  tablet: '768px',\r\n  tabletL: '1024px',\r\n};\r\n\r\nconst device = {\r\n  mobileS: `only screen and (max-width: ${deviceSizes.mobileS})`,\r\n  mobileM: `only screen and (max-width: ${deviceSizes.mobileM})`,\r\n  mobileL: `only screen and (max-width: ${deviceSizes.mobileL})`,\r\n  tablet: `only screen and (max-width: ${deviceSizes.tablet})`,\r\n  tabletL: `only screen and (max-width: ${deviceSizes.tabletL})`,\r\n};\r\n\r\nconst theme = {\r\n  fontSizes,\r\n  colors,\r\n  deviceSizes,\r\n  device,\r\n};\r\n\r\nexport default theme;\r\n","import { createGlobalStyle } from 'styled-components';\r\nimport reset from 'styled-reset';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  ${reset}\r\n\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  @font-face {\r\n    font-family: \"NotoSansKR\";\r\n    font-weight: normal;\r\n    font-style: normal;\r\n    src: url(\"/fonts/NotoSansKR-Regular.otf\") format(\"opentype\");\r\n  }\r\n\r\n  @font-face {\r\n    font-family: \"Helvetica\";\r\n    font-weight: normal;\r\n    font-style: normal;\r\n    src: url(\"/fonts/Helvetica.ttf\") format(\"truetype\");\r\n  }\r\n\r\n  @font-face {\r\n    font-family: \"HelveticaBlack\";\r\n    font-weight: normal;\r\n    font-style: normal;\r\n    src: url(\"/fonts/HelveticaBlack.ttf\") format(\"truetype\");\r\n  }\r\n\r\n  html {\r\n    color: #3E3E3E;\r\n    font-family: NotoSansKR;\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n    color: inherit;\r\n  }\r\n\r\n  input, button {\r\n    outline: none; \r\n    border: none;\r\n    background-color: transparent;                                                                                                                                                                        \r\n  }\r\n\r\n  input {\r\n    border: 0.1rem solid ${({ theme }) => theme.colors.gray3};\r\n  }\r\n\r\n  body {\r\n    height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  #root {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n    width: 100vw;\r\n    height: 80vh;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport theme from \"./styles/theme\";\r\nimport { GlobalStyle } from \"./styles/global-style\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <GlobalStyle />\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}